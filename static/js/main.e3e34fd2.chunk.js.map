{"version":3,"sources":["serviceWorker.js","backend/appFetch.js","modules/app/actionTypes.js","modules/app/actions.js","modules/app/reducer.js","modules/app/selectors.js","modules/catalog/actionTypes.js","modules/catalog/selectors.js","backend/NetworkError.js","backend/userService.js","backend/catalogService.js","backend/shoppingService.js","backend/index.js","modules/catalog/actions.js","modules/catalog/reducer.js","modules/catalog/components/CategorySelector.js","modules/catalog/components/FindProducts.js","modules/common/components/ErrorDialog.js","modules/common/components/Errors.js","modules/common/components/Loader.js","modules/common/components/Pager.js","modules/common/components/ProductLink.js","modules/common/components/BackLink.js","modules/catalog/components/Products.js","modules/catalog/components/FindProductsResult.js","modules/users/actionTypes.js","modules/users/actions.js","modules/users/reducer.js","modules/users/selectors.js","modules/users/components/Login.js","modules/users/components/SignUp.js","modules/users/components/UpdateProfile.js","modules/users/components/ChangePassword.js","modules/users/components/Logout.js","modules/users/index.js","modules/shopping/actionTypes.js","modules/shopping/actions.js","modules/shopping/reducer.js","modules/shopping/selectors.js","modules/shopping/components/AddToShoppingCart.js","modules/shopping/components/ShoppingCartIcon.js","modules/shopping/components/ShoppingItem.js","modules/shopping/components/ShoppingItemList.js","modules/shopping/components/ShoppingCart.js","modules/shopping/components/BuyForm.js","modules/shopping/components/Buy.js","modules/shopping/components/OrderLink.js","modules/shopping/components/PurchaseCompleted.js","modules/shopping/components/FindOrders.js","modules/shopping/components/Orders.js","modules/shopping/components/FindOrdersResult.js","modules/shopping/components/OrderDetails.js","modules/shopping/index.js","modules/catalog/components/ProductDetails.js","modules/catalog/index.js","modules/app/components/Header.js","modules/app/components/AppGlobalComponents.js","modules/app/components/Home.js","modules/app/components/Body.js","modules/app/components/Footer.js","modules/app/components/App.js","modules/app/index.js","store/rootReducer.js","store/index.js","i18n/messages/index.js","i18n/messages/messages_en.js","i18n/messages/messages_es.js","i18n/messages/messages_gl.js","index.js","i18n/index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","networkErrorCallback","reauthenticationCallback","LOADING","LOADED","ERROR","loading","type","actionTypes","loaded","initialState","reducer","combineReducers","action","getModuleState","app","getError","isLoading","FIND_ALL_CATEGORIES_COMPLETED","FIND_PRODUCTS_COMPLETED","CLEAR_PRODUCT_SEARCH","FIND_PRODUCT_BY_ID_COMPLETED","CLEAR_PRODUCT","catalog","getCategories","categories","getCategoryName","id","category","find","name","getProductSearch","productSearch","getProduct","product","NetworkError","this","messsage","isJson","response","contentType","headers","get","indexOf","handleResponse","onErrors","ok","status","json","payload","handleOkResponse","globalError","fieldErrors","handle4xxResponse","setReauthenticationCallback","callback","setServiceToken","serviceToken","sessionStorage","setItem","getServiceToken","getItem","removeServiceToken","removeItem","method","body","FormData","JSON","stringify","appFetch","path","options","fetch","login","userName","password","authenticatedUser","tryLoginFromServiceToken","signUp","user","logout","updateProfile","changePassword","oldPassword","newPassword","findAllCategories","findProducts","categoryId","keywords","page","length","findByProductId","addToShoppingCart","shoppingCartId","productId","quantity","updateShoppingCartItemQuantity","removeShoppingCartItem","buy","postalAddress","postalCode","findOrders","findOrder","orderId","init","userService","catalogService","shoppingService","dispatch","getState","selectors","backend","findAllCategoriesCompleted","criteria","clearProductSearch","result","previousFindProductsResultPage","nextFindProductsResultPage","findProductById","findProductByIdCompleted","clearProduct","connect","remainingProps","message","value","map","key","FindProducts","props","event","setState","target","preventDefault","actions","toNumber","trim","history","push","Number","className","onSubmit","e","handleSubmit","onChange","handleCategoryIdChange","handleKeywordsChange","React","Component","withRouter","injectIntl","onClose","intl","formatMessage","style","display","tabIndex","role","data-dismiss","onClick","errors","forEach","fieldName","fieldError","index","aria-label","aria-hidden","Loader","Pager","back","next","enabled","ProductLink","to","goBack","Products","products","scope","mapDispatchToProps","items","existMoreItems","SIGN_UP_COMPLETED","LOGIN_COMPLETED","LOGOUT","UPDATE_PROFILE_COMPLETED","signUpCompleted","loginCompleted","updateProfileCompleted","getUser","users","isLoggedIn","getUserName","backendErrors","Login","form","checkValidity","setBackendErrors","classList","add","handleErrorsClose","ref","node","noValidate","htmlFor","handleUserNameChange","autoFocus","required","handlePasswordChange","confirmPassword","firstName","lastName","email","passwordsDoNotMatch","SignUp","confirmPasswordInput","setCustomValidity","checkConfirmPassword","handleConfirmPasswordChange","handleFirstNameChange","handleLastNameChange","handleEmailChange","UpdateProfile","confirmNewPassword","backendNewErrors","ChangePassword","confirmNewPasswordInput","checkConfirmNewPassword","changePasword","handleOldPasswordChange","handleNewPasswordChange","handleConfirmNewPasswordChange","Logout","BUY_COMPLETED","CLEAR_ORDER","shoppingCartUpdated","shoppingCart","orderSearch","previousFindOrdersResultPage","nextFindOrdersResultPage","clearOrder","order","findOrderCompleted","totalPrice","totalQuantity","lastOrderId","shopping","getShoppingCart","getLastOrderId","getOrderSearch","getOrder","AddToShoppingCart","handleQuantityChange","min","ShoppingCartIcon","ShoppingItem","item","handleUpdateQuantity","onBackendErrors","onRemoveItem","shoppingItemListId","onUpdateQuantity","edit","handleRemoveItem","productName","productPrice","width","ShoppingItemList","list","cart","BuyForm","handlePostalAddressChange","handlePostalCodeChange","OrderLink","FindOrders","Orders","orders","Date","date","OrderDetails","params","isNaN","ProductDetails","description","price","loggedIn","data-toggle","data-target","aria-controls","aria-expanded","href","ConnectedErrorDialog","ErrorDialog","ConnectedLoader","AppGlobalComponents","Home","exact","component","FindProductsResult","ShoppingCart","Buy","PurchaseCompleted","FindOrdersResult","Footer","App","rootReducer","configureStore","middlewares","thunk","createStore","applyMiddleware","store","locale","languages","language","userLanguage","localeWithoutRegionCode","toLowerCase","split","localeMessages","messages","initReactIntl","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e3e34fd2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import NetworkError from './NetworkError';\n\nconst BACKEND_URL = 'http://localhost:8080';\nconst SERVICE_TOKEN_NAME = 'serviceToken';\n\nlet networkErrorCallback;\nlet reauthenticationCallback;\n\nconst isJson = response => {\n\n    const contentType = response.headers.get(\"content-type\");\n\n    return contentType && contentType.indexOf(\"application/json\") !== -1;\n\n}\n\nconst handleOkResponse = (response, onSuccess) => {\n\n    if (!response.ok) {\n        return false;\n    }\n\n    if (!onSuccess) {\n        return true;\n    }\n\n    if (response.status === 204) {\n        onSuccess();\n        return true;\n    }\n\n    if (isJson(response)) {\n        response.json().then(payload => onSuccess(payload));\n    }\n\n    return true;\n\n}\n\nconst handle4xxResponse = (response, onErrors) => {\n\n    if (response.status < 400 || response.status >= 500) {\n        return false;\n    }\n\n    if (response.status === 401 && reauthenticationCallback){\n        reauthenticationCallback();\n        return true;\n    }\n\n    if (!isJson(response)) {\n        throw new NetworkError();\n    }\n\n    if (onErrors) {\n\n        response.json().then(payload => {\n            if (payload.globalError || payload.fieldErrors) {\n                onErrors(payload);\n            }\n        });\n\n    }\n\n    return true;\n\n}\n\nconst handleResponse = (response, onSuccess, onErrors) => {\n\n    if (handleOkResponse(response, onSuccess)) {\n        return;\n    }\n\n    if (handle4xxResponse(response, onErrors)) {\n        return;\n    }\n\n    throw new NetworkError();\n    \n}\n\nexport const init = callback => networkErrorCallback = callback;\n\nexport const setReauthenticationCallback = callback => reauthenticationCallback = callback;\n\nexport const setServiceToken = serviceToken => \n    sessionStorage.setItem(SERVICE_TOKEN_NAME, serviceToken);\n\nexport const getServiceToken = () => sessionStorage.getItem(SERVICE_TOKEN_NAME);\n\nexport const removeServiceToken = () => \n    sessionStorage.removeItem(SERVICE_TOKEN_NAME);\n\nexport const config = (method, body) => {\n\n    const config = {};\n\n    config.method = method;\n\n    if (body) {\n        if (body instanceof FormData) {\n            config.body = body;\n        } else  {\n            config.headers = {'Content-Type': 'application/json'};\n            config.body = JSON.stringify(body);\n        }\n    }\n\n    let serviceToken = getServiceToken();\n\n    if (serviceToken) {\n\n        if (config.headers) {\n            config.headers['Authorization'] = `Bearer ${serviceToken}`;\n        } else {\n            config.headers = {'Authorization': `Bearer ${serviceToken}`};\n        }\n\n    }\n\n    return config;\n\n}\n\nexport const appFetch = (path, options, onSuccess, onErrors) =>\n    fetch(`${BACKEND_URL}${path}`, options)\n        .then(response => handleResponse(response, onSuccess, onErrors))\n        .catch(networkErrorCallback);\n","export const LOADING = 'project/common/loading';\nexport const LOADED = 'project/common/loaded';\nexport const ERROR = 'project/common/error';\n","import * as actionTypes from './actionTypes';\n\nexport const loading = () => ({\n    type: actionTypes.LOADING\n});\n\nexport const loaded = () => ({\n    type: actionTypes.LOADED\n});\n\nexport const error = error => ({\n    type: actionTypes.ERROR,\n    error\n});","import {combineReducers} from 'redux';\n\nimport * as actionTypes from './actionTypes';\n\nconst initialState = {\n    error: null,\n    loading: false,\n};\n\nconst error = (state = initialState.error, action) => {\n\n    switch (action.type) {\n\n        case actionTypes.ERROR:\n            return action.error;\n\n        default:\n            return state;\n\n    }\n\n}\n\nconst loading = (state = initialState.loading, action) => {\n\n    switch (action.type) {\n\n        case actionTypes.LOADING:\n            return true;\n\n        case actionTypes.LOADED:\n            return false;\n\n        case actionTypes.ERROR:\n            return false;\n\n        default:\n            return state;\n\n    }\n\n}\n\nconst reducer = combineReducers({\n    error,\n    loading\n});\n\nexport default reducer;","const getModuleState = state => state.app;\n\nexport const getError = state => getModuleState(state).error;\n\nexport const isLoading = state => getModuleState(state).loading;","export const FIND_ALL_CATEGORIES_COMPLETED = \"project/catalog/findAllCategoriesCompleted\";\nexport const FIND_PRODUCTS_COMPLETED = \"project/catalog/findProductsCompleted\";\nexport const CLEAR_PRODUCT_SEARCH = \"project/catalog/clearProductSearch\";\nexport const FIND_PRODUCT_BY_ID_COMPLETED = \"project/catalog/findProductByIdCompleted\";\nexport const CLEAR_PRODUCT = \"project/catalog/clearProduct\";","const getModuleState = state => state.catalog;\n\nexport const getCategories = state => \n    getModuleState(state).categories;\n\nexport const getCategoryName = (categories, id) => {\n\n    if (!categories) {\n        return '';\n    }\n\n    const category = categories.find(category => category.id === id);\n\n    if (!category) {\n        return '';\n    }\n\n    return category.name;\n\n}\n\nexport const getProductSearch = state =>\n    getModuleState(state).productSearch;\n\nexport const getProduct = state =>\n    getModuleState(state).product;\n\n","class NetworkError {\n\n    constructor() {\n\n        this.messsage = \"Network error\";\n\n    }\n\n}\n\nexport default NetworkError;","import {config, appFetch, setServiceToken, getServiceToken, removeServiceToken, setReauthenticationCallback} from './appFetch';\n\nexport const login = (userName, password, onSuccess, onErrors, reauthenticationCallback) =>\n    appFetch('/users/login', config('POST', {userName, password}),\n        authenticatedUser => {\n            setServiceToken(authenticatedUser.serviceToken);\n            setReauthenticationCallback(reauthenticationCallback);\n            onSuccess(authenticatedUser);\n        }, \n        onErrors);\n\nexport const tryLoginFromServiceToken = (onSuccess, reauthenticationCallback) => {\n\n    const serviceToken = getServiceToken();\n\n    if (!serviceToken) {\n        onSuccess();\n        return;\n    }\n\n    setReauthenticationCallback(reauthenticationCallback);\n\n    appFetch('/users/loginFromServiceToken', config('POST'),\n        authenticatedUser => onSuccess(authenticatedUser),\n        () => removeServiceToken()\n    );\n\n}\n\nexport const signUp = (user, onSuccess, onErrors, reauthenticationCallback) => {\n\n    appFetch('/users/signUp', config('POST', user), \n        authenticatedUser => {\n            setServiceToken(authenticatedUser.serviceToken);\n            setReauthenticationCallback(reauthenticationCallback);\n            onSuccess(authenticatedUser);\n        }, \n        onErrors);\n\n}\n\nexport const logout = () => removeServiceToken();\n\nexport const updateProfile = (user, onSuccess, onErrors) =>\n    appFetch(`/users/${user.id}`, config('PUT', user),\n        onSuccess, onErrors);\n\nexport const changePassword = (id, oldPassword, newPassword, onSuccess,\n    onErrors) =>\n    appFetch(`/users/${id}/changePassword`, \n        config('POST', {oldPassword, newPassword}),\n        onSuccess, onErrors);","import {config, appFetch} from './appFetch';\n\nexport const findAllCategories = (onSuccess) => \n    appFetch('/catalog/categories', config('GET'), onSuccess);\n\nexport const findProducts = ({categoryId, keywords, page}, \n    onSuccess) => {\n\n    let path = `/catalog/products?page=${page}`;\n\n    path += categoryId ? `&categoryId=${categoryId}` : \"\";\n    path += keywords.length > 0 ? `&keywords=${keywords}` : \"\";\n\n    appFetch(path, config('GET'), onSuccess);\n\n}\n\nexport const findByProductId = (id, onSuccess) => \n    appFetch(`/catalog/products/${id}`, config('GET'), onSuccess);\n","import {config, appFetch} from './appFetch';\n\nexport const addToShoppingCart = (shoppingCartId, productId, quantity, onSuccess, \n    onErrors) =>\n    appFetch(`/shopping/shoppingcarts/${shoppingCartId}/addToShoppingCart`, \n        config('POST', {productId, quantity}), onSuccess, onErrors);\n\nexport const updateShoppingCartItemQuantity = (shoppingCartId, productId,\n    quantity, onSuccess, onErrors) =>\n    appFetch(`/shopping/shoppingcarts/${shoppingCartId}/updateShoppingCartItemQuantity`, \n        config('POST', {productId, quantity}), onSuccess, onErrors);\n\nexport const removeShoppingCartItem = (shoppingCartId, productId, onSuccess,\n    onErrors) =>\n    appFetch(`/shopping/shoppingcarts/${shoppingCartId}/removeShoppingCartItem`, \n        config('POST', {productId}), onSuccess, onErrors);\n\nexport const buy = (shoppingCartId, postalAddress, postalCode, onSuccess, \n    onErrors) =>\n    appFetch(`/shopping/shoppingcarts/${shoppingCartId}/buy`, \n        config('POST', {postalAddress, postalCode}), onSuccess, onErrors);\n\nexport const findOrders = ({page}, onSuccess) => \n    appFetch(`/shopping/orders?page=${page}`, config('GET'), onSuccess);\n\nexport const findOrder = (orderId, onSuccess) =>\n    appFetch(`/shopping/orders/${orderId}`, config('GET'), onSuccess);\n","import {init} from './appFetch';\nimport * as userService from './userService';\nimport * as catalogService from './catalogService';\nimport * as shoppingService from './shoppingService';\n\nexport {default as NetworkError} from \"./NetworkError\";\n\nexport default {init, userService, catalogService, shoppingService};\n","import * as actionTypes from './actionTypes';\nimport * as selectors from './selectors';\nimport backend from '../../backend';\n\nconst findAllCategoriesCompleted = categories => ({\n    type: actionTypes.FIND_ALL_CATEGORIES_COMPLETED,\n    categories\n}); \n\nexport const findAllCategories = () => (dispatch, getState) => {\n\n    const categories = selectors.getCategories(getState());\n\n    if (!categories) {\n\n        backend.catalogService.findAllCategories(\n            categories => dispatch(findAllCategoriesCompleted(categories))\n        );\n        \n    }\n\n}\n\nconst findProductsCompleted = productSearch => ({\n    type: actionTypes.FIND_PRODUCTS_COMPLETED,\n    productSearch\n});\n\nexport const findProducts = criteria => dispatch => {\n\n    dispatch(clearProductSearch());\n    backend.catalogService.findProducts(criteria,\n        result => dispatch(findProductsCompleted({criteria, result})));\n\n}\n\nexport const previousFindProductsResultPage = criteria =>\n    findProducts({...criteria, page: criteria.page-1});\n\nexport const nextFindProductsResultPage = criteria =>\n    findProducts({...criteria, page: criteria.page+1});\n\nconst clearProductSearch = () => ({\n    type: actionTypes.CLEAR_PRODUCT_SEARCH\n});\n\nconst findProductByIdCompleted = product => ({\n    type: actionTypes.FIND_PRODUCT_BY_ID_COMPLETED,\n    product\n});\n    \nexport const findProductById = id => dispatch => {\n    backend.catalogService.findByProductId(id,\n        product => dispatch(findProductByIdCompleted(product)));\n}\n\nexport const clearProduct = () => ({\n    type: actionTypes.CLEAR_PRODUCT\n});\n","import {combineReducers} from 'redux';\n\nimport * as actionTypes from './actionTypes';\n\nconst initialState = {\n    categories: null,\n    productSearch: null,\n    product: null\n};\n\nconst categories = (state = initialState.categories, action) => {\n\n    switch (action.type) {\n\n        case actionTypes.FIND_ALL_CATEGORIES_COMPLETED:\n            return action.categories;\n\n        default:\n            return state;\n\n    }\n\n}\n\nconst productSearch = (state = initialState.productSearch, action) => {\n\n    switch (action.type) {\n\n        case actionTypes.FIND_PRODUCTS_COMPLETED:\n            return action.productSearch;\n\n        case actionTypes.CLEAR_PRODUCT_SEARCH:\n            return initialState.productSearch;\n\n        default:\n            return state;\n\n    }\n\n}\n\nconst product = (state = initialState.product, action) => {\n\n    switch (action.type) {\n\n        case actionTypes.FIND_PRODUCT_BY_ID_COMPLETED:\n            return action.product;\n\n        case actionTypes.CLEAR_PRODUCT:\n            return initialState.product;\n\n        default:\n            return state;\n\n    }\n\n}\n\nconst reducer = combineReducers({\n    categories,\n    productSearch,\n    product\n});\n\nexport default reducer;\n\n\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as selectors from '../selectors';\n\nconst CategorySelector = ({categories, dispatch, ...remainingProps} ) => (\n\n    <select {...remainingProps}>\n\n        <FormattedMessage id='project.catalog.CategorySelector.allDepartments'>\n            {message => (<option value=\"\">{message}</option>)}\n        </FormattedMessage>\n\n        {categories && categories.map(category => \n            <option key={category.id} value={category.id}>{category.name}</option>\n        )}\n\n    </select>\n\n);\n\nconst mapStateToProps = state => ({\n    categories: selectors.getCategories(state)\n});\n\nexport default connect(mapStateToProps)(CategorySelector);\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport CategorySelector from './CategorySelector';\nimport * as actions from '../actions';\n\nconst initialState = {\n    categoryId: '',\n    keywords: ''\n};\n\nclass FindProducts extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = initialState;\n\n    }\n\n    handleCategoryIdChange(event) {\n        this.setState({categoryId: event.target.value});\n    }\n\n    handleKeywordsChange(event) {\n        this.setState({keywords: event.target.value});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.props.dispatch(actions.findProducts(\n            {categoryId: this.toNumber(this.state.categoryId), \n                keywords: this.state.keywords.trim(), page: 0}));\n        this.props.history.push('/catalog/find-products-result');\n    }\n\n    toNumber(value) {\n        return value.length > 0 ? Number(value) : null;\n    }\n\n    render () {\n\n        return (\n\n            <form className=\"form-inline mt-2 mt-md-0\" onSubmit={e => this.handleSubmit(e)}>\n\n                <CategorySelector id=\"categoryId\" className=\"custom-select my-1 mr-sm-2\"\n                    value={this.state.categoryId} onChange={e => this.handleCategoryIdChange(e)}/>\n\n                <input id=\"keywords\" type=\"text\" className=\"form-control mr-sm-2\"\n                    value={this.state.keywords} onChange={e => this.handleKeywordsChange(e)}/>\n                \n                <button type=\"submit\" className=\"btn btn-primary my-2 my-sm-0\">\n                    <FormattedMessage id='project.global.buttons.search'/>\n                </button>\n\n            </form>\n\n        );\n\n    }\n\n}\n\nexport default withRouter(connect()(FindProducts));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {injectIntl, FormattedMessage} from 'react-intl';\n\nimport {NetworkError} from '../../../backend';\n\nconst ErrorDialog = ({error, onClose, intl}) => {\n\n    if (error == null) {\n        return null;\n    }\n\n    const modalStyle = {display: 'block'}; \n    const message = error instanceof NetworkError ?\n        intl.formatMessage({id: 'project.global.exceptions.NetworkError'}) :\n        error.message;\n\n    return (\n\n        <div className=\"modal\" style={modalStyle} tabIndex=\"-1\" role=\"dialog\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\">\n                            <FormattedMessage id=\"project.common.ErrorDialog.title\"/>\n                        </h5>\n                    </div>\n                    <div className=\"modal-body\">\n                        <p>{message}</p>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-primary\" \n                            data-dismiss=\"modal\" \n                            onClick={onClose}>\n                            <FormattedMessage id=\"project.global.buttons.close\"/>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    );\n\n};\n\nErrorDialog.propTypes = {\n    error: PropTypes.object,\n    onClose: PropTypes.func.isRequired\n}\n\nexport default injectIntl(ErrorDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {injectIntl} from 'react-intl';\n\nconst Errors = ({errors, onClose, intl}) => {\n\n    if (!errors) {\n        return null;\n    }\n\n    let globalError;\n    let fieldErrors;\n\n    if (errors.globalError) {\n        globalError = errors.globalError;\n    } else if (errors.fieldErrors) {\n        fieldErrors = [];\n        errors.fieldErrors.forEach(e => {\n            let fieldName = intl.formatMessage({id: `project.global.fields.${e.fieldName}`});\n            fieldErrors.push(`${fieldName}: ${e.message}`)\n        });\n\n    }\n\n    return (\n\n        <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n\n            {globalError ? globalError : ''}\n\n            {fieldErrors ?\n                <ul>\n                    {fieldErrors.map((fieldError, index) =>\n                        <li key={index}>{fieldError}</li>\n                    )}\n                </ul>\n                : \n                ''\n            }\n\n            <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" \n                onClick={() => onClose()}>\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n\n        </div>\n\n    );\n\n}\n\nErrors.propTypes = {\n    errors: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    onClose: PropTypes.func.isRequired\n};\n\nexport default injectIntl(Errors);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Loader.css';\n\nconst Loader = ({loading}) => loading && (\n    <div id=\"floatingCirclesG\">\n        <div className=\"f_circleG\" id=\"frotateG_01\"></div>\n        <div className=\"f_circleG\" id=\"frotateG_02\"></div>\n        <div className=\"f_circleG\" id=\"frotateG_03\"></div>\n        <div className=\"f_circleG\" id=\"frotateG_04\"></div>\n        <div className=\"f_circleG\" id=\"frotateG_05\"></div>\n        <div className=\"f_circleG\" id=\"frotateG_07\"></div>\n        <div className=\"f_circleG\" id=\"frotateG_08\"></div>\n    </div>\n);\n\nLoader.propTypes = {\n    loading: PropTypes.bool.isRequired\n};\n\nexport default Loader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nconst Pager = ({back, next}) => (\n\n    <nav aria-label=\"page navigation\">\n        <ul className=\"pagination justify-content-center\">\n            <li className={`page-item ${back.enabled ? \"\": \"disabled\"}`}>\n                <button className=\"page-link\"\n                    onClick={back.onClick}>\n                    <FormattedMessage id='project.global.buttons.back'/>\n                </button>\n            </li>\n            <li className={`page-item ${next.enabled ? \"\": \"disabled\"}`}>\n                <button className=\"page-link\"\n                    onClick={next.onClick}>\n                    <FormattedMessage id='project.global.buttons.next'/>\n                </button>\n            </li>\n        </ul>\n    </nav>\n\n);\n\nPager.propTypes = {\n    back: PropTypes.object.isRequired,\n    next: PropTypes.object.isRequired\n};\n\nexport default Pager;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {Link} from 'react-router-dom';\n\nconst ProductLink = ({id, name}) => {\n    \n    return (\n        <Link to={`/catalog/product-details/${id}`}>\n            {name}\n        </Link>\n    );\n\n}\n\nProductLink.propTypes = {\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n};\n\nexport default ProductLink; ","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {FormattedMessage} from 'react-intl';\n\nconst BackLink = ({history}) => history.length > 2 && (\n\n    <button type=\"button\" className=\"btn btn-link\" \n        onClick={() => history.goBack()}>\n\n        <FormattedMessage id='project.global.buttons.back'/>\n\n    </button>\n\n);\n\nexport default withRouter(BackLink);\n","import React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport * as selectors from '../selectors';\nimport {ProductLink} from '../../common';\n\nconst Products = ({products, categories}) => (\n\n    <table className=\"table table-striped table-hover\">\n\n        <thead>\n            <tr>\n                <th scope=\"col\">\n                    <FormattedMessage id='project.global.fields.department'/>\n                </th>\n                <th scope=\"col\">\n                    <FormattedMessage id='project.global.fields.name'/>\n                </th>\n            </tr>\n        </thead>\n\n        <tbody>\n            {products.map(product => \n                <tr key={product.id}>\n                    <td>{selectors.getCategoryName(categories, product.categoryId)}</td>\n                    <td><ProductLink id={product.id} name={product.name}/></td>\n                </tr>\n            )}\n        </tbody>\n\n    </table>\n\n);\n\nProducts.propTypes = {\n    products: PropTypes.array.isRequired,\n    categories: PropTypes.array.isRequired\n};\n\nexport default Products;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as selectors from '../selectors';\nimport * as actions from '../actions';\nimport {Pager} from '../../common';\nimport Products from './Products';\n\nconst FindProductsResult = ({productSearch, categories, previousFindProductsResultPage, nextFindProductsResultPage}) => {\n\n    if (!productSearch) {\n        return null;\n    }\n\n    if (productSearch.result.items.length === 0) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                <FormattedMessage id='project.catalog.FindProductsResult.noProductsFound'/>\n            </div>\n        );\n    }\n    \n    return (\n\n        <div>\n            <Products products={productSearch.result.items} categories={categories}/>\n            <Pager \n                back={{\n                    enabled: productSearch.criteria.page >= 1,\n                    onClick: () => previousFindProductsResultPage(productSearch.criteria)}}\n                next={{\n                    enabled: productSearch.result.existMoreItems,\n                    onClick: () => nextFindProductsResultPage(productSearch.criteria)}}/>\n        </div>\n\n    );\n\n}\n\nconst mapStateToProps = (state) => ({\n    productSearch: selectors.getProductSearch(state),\n    categories: selectors.getCategories(state)\n});\n\nconst mapDispatchToProps = {\n    previousFindProductsResultPage: actions.previousFindProductsResultPage,\n    nextFindProductsResultPage: actions.nextFindProductsResultPage\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FindProductsResult);","export const SIGN_UP_COMPLETED = \"project/users/signUpCompleted\";\nexport const LOGIN_COMPLETED = \"project/users/loginCompleted\";\nexport const LOGOUT = \"project/users/logout\";\nexport const UPDATE_PROFILE_COMPLETED = \"project/users/updateProfileCompleted\";\n","import * as actionTypes from './actionTypes';\nimport backend from '../../backend';\n\nconst signUpCompleted = authenticatedUser => ({\n    type: actionTypes.SIGN_UP_COMPLETED,\n    authenticatedUser\n});\n\nexport const signUp = (user, onSuccess, onErrors, reauthenticationCallback) => dispatch =>\n    backend.userService.signUp(user,\n        authenticatedUser => {\n            dispatch(signUpCompleted(authenticatedUser));\n            onSuccess();\n        },\n        onErrors,\n        reauthenticationCallback);\n\nconst loginCompleted = authenticatedUser => ({\n    type: actionTypes.LOGIN_COMPLETED,\n    authenticatedUser\n});\n\nexport const login = (userName, password, onSuccess, onErrors, reauthenticationCallback) => dispatch =>\n    backend.userService.login(userName, password,\n        authenticatedUser => {\n            dispatch(loginCompleted(authenticatedUser));\n            onSuccess();\n        },\n        onErrors,\n        reauthenticationCallback\n    );\n\nexport const tryLoginFromServiceToken = reauthenticationCallback => dispatch =>\n    backend.userService.tryLoginFromServiceToken(\n        authenticatedUser => {\n            if (authenticatedUser) {\n                dispatch(loginCompleted(authenticatedUser));\n            }\n        },\n        reauthenticationCallback\n    );\n    \n\nexport const logout = () => {\n\n    backend.userService.logout();\n\n    return {type: actionTypes.LOGOUT};\n\n};\n\nexport const updateProfileCompleted = user => ({\n    type: actionTypes.UPDATE_PROFILE_COMPLETED,\n    user\n})\n\nexport const updateProfile = (user, onSuccess, onErrors) => dispatch =>\n    backend.userService.updateProfile(user, \n        user => {\n            dispatch(updateProfileCompleted(user));\n            onSuccess();\n        },\n        onErrors);\n\nexport const changePassword = (id, oldPassword, newPassword, onSuccess, onErrors) => dispatch =>\n    backend.userService.changePassword(id, oldPassword, newPassword, onSuccess, onErrors);","import {combineReducers} from 'redux';\n\nimport * as actionTypes from './actionTypes';\n\nconst initialState = {\n    user: null\n};\n\nconst user = (state = initialState.user, action) => {\n\n    switch (action.type) {\n\n        case actionTypes.SIGN_UP_COMPLETED:\n            return action.authenticatedUser.user;\n\n        case actionTypes.LOGIN_COMPLETED:\n            return action.authenticatedUser.user;\n\n        case actionTypes.LOGOUT:\n            return initialState.user;\n\n        case actionTypes.UPDATE_PROFILE_COMPLETED:\n            return action.user;\n\n        default:\n            return state;\n\n    }\n\n}\n\nconst reducer = combineReducers({\n    user\n});\n\nexport default reducer;\n\n\n","const getModuleState = state => state.users;\n\nexport const getUser = state => \n    getModuleState(state).user;\n\nexport const isLoggedIn = state =>\n    getUser(state) !== null\n\nexport const getUserName = state => \n    isLoggedIn(state) ? getUser(state).userName : null;\n\n\n\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Errors} from '../../common';\nimport * as actions from '../actions';\n\nconst initialState = {\n    userName: '',\n    password: '',\n    backendErrors: null\n};\n\nconst reauthenticationCallback = (dispatch, history) => () => {\n    history.push('/users/login');\n    dispatch(actions.logout());\n}\n\nclass Login extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = initialState;\n\n    }\n\n    handleUserNameChange(event) {\n        this.setState({userName: event.target.value});\n    }\n\n    handlePasswordChange(event) {\n        this.setState({password: event.target.value});\n    }\n\n    handleSubmit(event) {\n\n        event.preventDefault();\n\n        if (this.form.checkValidity()) {\n            this.login();\n        } else {\n            this.setBackendErrors(null);\n            this.form.classList.add('was-validated');\n        }\n\n    }\n\n    login() {\n\n        this.props.dispatch(actions.login(\n            this.state.userName.trim(),\n            this.state.password,\n            () => this.props.history.push('/'),\n            errors => this.setBackendErrors(errors),\n            reauthenticationCallback(this.props.dispatch, this.props.history)\n        ));\n        \n    }\n\n    setBackendErrors(backendErrors) {\n        this.setState({backendErrors});\n    }\n\n    handleErrorsClose() {\n        this.setState({backendErrors: null});\n    }\n\n    render() {\n\n        return (\n            <div>\n                <p className=\"text-center\">\n                    <Link to=\"/users/signup\">\n                        <FormattedMessage id=\"project.users.SignUp.title\"/>\n                    </Link>\n                </p>\n                <Errors errors={this.state.backendErrors} onClose={() => this.handleErrorsClose()}/>\n                <div className=\"card bg-light border-dark\">\n                    <h5 className=\"card-header\">\n                        <FormattedMessage id=\"project.users.Login.title\"/>\n                    </h5>\n                    <div className=\"card-body\">\n                        <form ref={node => this.form = node} \n                            className=\"needs-validation\" noValidate \n                            onSubmit={(e) => this.handleSubmit(e)}>\n                            <div className=\"form-group row\">\n                                <label htmlFor=\"userName\" className=\"col-md-3 col-form-label\">\n                                    <FormattedMessage id=\"project.global.fields.userName\"/>\n                                </label>\n                                <div className=\"col-md-4\">\n                                    <input type=\"text\" id=\"userName\" className=\"form-control\"\n                                        value={this.state.userName}\n                                        onChange={(e) => this.handleUserNameChange(e)}\n                                        autoFocus\n                                        required/>\n                                    <div className=\"invalid-feedback\">\n                                        <FormattedMessage id='project.global.validator.required'/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <label htmlFor=\"password\" className=\"col-md-3 col-form-label\">\n                                    <FormattedMessage id=\"project.global.fields.password\"/>\n                                </label>\n                                <div className=\"col-md-4\">\n                                    <input type=\"password\" id=\"password\" className=\"form-control\"\n                                        value={this.state.password}\n                                        onChange={(e) => this.handlePasswordChange(e)}\n                                        required/>\n                                    <div className=\"invalid-feedback\">\n                                        <FormattedMessage id='project.global.validator.required'/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <div className=\"offset-md-3 col-md-1\">\n                                    <button type=\"submit\" className=\"btn btn-primary\">\n                                        <FormattedMessage id=\"project.users.Login.title\"/>\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n\n    }\n\n}\n\nexport default connect()(Login);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Errors} from '../../common';\nimport * as actions from '../actions';\n\nconst initialState = {\n    userName: '',\n    password: '',\n    confirmPassword: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    backendErrors: null,\n    passwordsDoNotMatch: false\n};\n\nconst reauthenticationCallback = (dispatch, history) => () => {\n    history.push('/users/login');\n    dispatch(actions.logout());\n}\n\nclass SignUp extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = initialState;\n\n    }\n\n    handleUserNameChange(event) {\n        this.setState({userName: event.target.value});\n    }\n\n    handlePasswordChange(event) {\n        this.setState({password: event.target.value});\n    }\n\n    handleConfirmPasswordChange(event) {\n\n        this.confirmPasswordInput.setCustomValidity('');\n        this.setState({confirmPassword: event.target.value,\n            passwordsDoNotMatch: false});\n    \n    }\n\n    handleFirstNameChange(event) {\n        this.setState({firstName: event.target.value});\n    }\n\n    handleLastNameChange(event) {\n        this.setState({lastName: event.target.value});\n    }\n\n    handleEmailChange(event) {\n        this.setState({email: event.target.value});\n    }\n\n    handleSubmit(event) {\n\n        event.preventDefault();\n\n        if (this.form.checkValidity() && this.checkConfirmPassword()) {\n            this.signUp();\n        } else {\n            this.setBackendErrors(null);\n            this.form.classList.add('was-validated');\n        }\n\n    }\n\n    checkConfirmPassword() {\n\n        if (this.state.password !== this.state.confirmPassword) {\n\n            this.confirmPasswordInput.setCustomValidity('error');\n            this.setState({passwordsDoNotMatch: true});\n\n            return false;\n\n        } else {\n            return true;\n        }\n\n    }\n\n    signUp() {\n\n        this.props.dispatch(actions.signUp(\n            {userName: this.state.userName.trim(),\n            password: this.state.password,\n            firstName: this.state.firstName.trim(),\n            lastName: this.state.lastName.trim(),\n            email: this.state.email.trim()},\n            () => this.props.history.push('/'),\n            errors => this.setBackendErrors(errors),\n            reauthenticationCallback(this.props.dispatch, this.props.history)\n        ));\n        \n    }\n\n    setBackendErrors(backendErrors) {\n        this.setState({backendErrors});\n    }\n\n    handleErrorsClose() {\n        this.setState({backendErrors: null});\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Errors errors={this.state.backendErrors} onClose={() => this.handleErrorsClose()}/>\n                <div className=\"card bg-light border-dark\">\n                    <h5 className=\"card-header\">\n                        <FormattedMessage id=\"project.users.SignUp.title\"/>\n                    </h5>\n                    <div className=\"card-body\">\n                        <form ref={node => this.form = node}\n                            className=\"needs-validation\" noValidate \n                            onSubmit={(e) => this.handleSubmit(e)}>\n                            <div className=\"form-group row\">\n                                <label htmlFor=\"userName\" className=\"col-md-3 col-form-label\">\n                                    <FormattedMessage id=\"project.global.fields.userName\"/>\n                                </label>\n                                <div className=\"col-md-4\">\n                                    <input type=\"text\" id=\"userName\" className=\"form-control\"\n                                        value={this.state.userName}\n                                        onChange={(e) => this.handleUserNameChange(e)}\n                                        autoFocus\n                                        required/>\n                                    <div className=\"invalid-feedback\">\n                                        <FormattedMessage id='project.global.validator.required'/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <label htmlFor=\"password\" className=\"col-md-3 col-form-label\">\n                                    <FormattedMessage id=\"project.global.fields.password\"/>\n                                </label>\n                                <div className=\"col-md-4\">\n                                    <input type=\"password\" id=\"password\" className=\"form-control\"\n                                        value={this.state.password}\n                                        onChange={(e) => this.handlePasswordChange(e)}\n                                        required/>\n                                    <div className=\"invalid-feedback\">\n                                        <FormattedMessage id='project.global.validator.required'/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <label htmlFor=\"confirmPassword\" className=\"col-md-3 col-form-label\">\n                                    <FormattedMessage id=\"project.users.SignUp.fields.confirmPassword\"/>\n                                </label>\n                                <div className=\"col-md-4\">\n                                    <input ref={node => this.confirmPasswordInput = node}\n                                        type=\"password\" id=\"confirmPassword\" className=\"form-control\"\n                                        value={this.state.confirmPassword}\n                                        onChange={(e) => this.handleConfirmPasswordChange(e)}\n                                        required/>\n                                    <div className=\"invalid-feedback\">\n                                        {this.state.passwordsDoNotMatch ?\n                                            <FormattedMessage id='project.global.validator.passwordsDoNotMatch'/> :\n                                            <FormattedMessage id='project.global.validator.required'/>}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <label htmlFor=\"firstName\" className=\"col-md-3 col-form-label\">\n                                    <FormattedMessage id=\"project.global.fields.firstName\"/>\n                                </label>\n                                <div className=\"col-md-4\">\n                                    <input type=\"text\" id=\"firstName\" className=\"form-control\"\n                                        value={this.state.firstName}\n                                        onChange={(e) => this.handleFirstNameChange(e)}\n                                        required/>\n                                    <div className=\"invalid-feedback\">\n                                        <FormattedMessage id='project.global.validator.required'/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <label htmlFor=\"lastName\" className=\"col-md-3 col-form-label\">\n                                    <FormattedMessage id=\"project.global.fields.lastName\"/>\n                                </label>\n                                <div className=\"col-md-4\">\n                                    <input type=\"text\" id=\"lastName\" className=\"form-control\"\n                                        value={this.state.lastName}\n                                        onChange={(e) => this.handleLastNameChange(e)}\n                                        required/>\n                                    <div className=\"invalid-feedback\">\n                                        <FormattedMessage id='project.global.validator.required'/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <label htmlFor=\"email\" className=\"col-md-3 col-form-label\">\n                                    <FormattedMessage id=\"project.global.fields.email\"/>\n                                </label>\n                                <div className=\"col-md-4\">\n                                    <input type=\"email\" id=\"email\" className=\"form-control\"\n                                        value={this.state.email}\n                                        onChange={(e) => this.handleEmailChange(e)}\n                                        required/>\n                                    <div className=\"invalid-feedback\">\n                                        <FormattedMessage id='project.global.validator.email'/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <div className=\"offset-md-3 col-md-2\">\n                                    <button type=\"submit\" className=\"btn btn-primary\">\n                                        <FormattedMessage id=\"project.users.SignUp.title\"/>\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n\n    }\n\n}\n\nexport default connect()(SignUp);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Errors} from '../../common';\nimport * as actions from '../actions';\nimport * as selectors from '../selectors';\n\nclass UpdateProfile extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            firstName: props.user.firstName,\n            lastName: props.user.lastName,\n            email: props.user.email,\n            backendErrors: null,\n            passwordsDoNotMatch: false\n        };\n\n    }\n\n    handleFirstNameChange(event) {\n        this.setState({firstName: event.target.value});\n    }\n\n    handleLastNameChange(event) {\n        this.setState({lastName: event.target.value});\n    }\n\n    handleEmailChange(event) {\n        this.setState({email: event.target.value});\n    }\n\n    handleSubmit(event) {\n\n        event.preventDefault();\n\n        if (this.form.checkValidity()) {\n            this.updateProfile();\n        } else {\n            this.setBackendErrors(null);\n            this.form.classList.add('was-validated');\n        }\n\n    }\n\n    updateProfile() {\n\n        this.props.updateProfile(\n            {id: this.props.user.id,\n            firstName: this.state.firstName.trim(),\n            lastName: this.state.lastName.trim(),\n            email: this.state.email.trim()},\n            () => this.props.history.push('/'),\n            errors => this.setBackendErrors(errors));\n        \n    }\n\n    setBackendErrors(backendErrors) {\n        this.setState({backendErrors});\n    }\n\n    handleErrorsClose() {\n        this.setState({backendErrors: null});\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Errors errors={this.state.backendErrors} onClose={() => this.handleErrorsClose()}/>\n                <div className=\"card bg-light border-dark\">\n                    <h5 className=\"card-header\">\n                        <FormattedMessage id=\"project.users.UpdateProfile.title\"/>\n                    </h5>\n                    <div className=\"card-body\">\n                        <form ref={node => this.form = node} \n                            className=\"needs-validation\" noValidate onSubmit={(e) => this.handleSubmit(e)}>\n                            <div className=\"form-group row\">\n                                <label htmlFor=\"firstName\" className=\"col-md-3 col-form-label\">\n                                    <FormattedMessage id=\"project.global.fields.firstName\"/>\n                                </label>\n                                <div className=\"col-md-4\">\n                                    <input type=\"text\" id=\"firstName\" className=\"form-control\"\n                                        value={this.state.firstName}\n                                        onChange={(e) => this.handleFirstNameChange(e)}\n                                        autoFocus\n                                        required/>\n                                    <div className=\"invalid-feedback\">\n                                        <FormattedMessage id='project.global.validator.required'/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <label htmlFor=\"lastName\" className=\"col-md-3 col-form-label\">\n                                    <FormattedMessage id=\"project.global.fields.lastName\"/>\n                                </label>\n                                <div className=\"col-md-4\">\n                                    <input type=\"text\" id=\"lastName\" className=\"form-control\"\n                                        value={this.state.lastName}\n                                        onChange={(e) => this.handleLastNameChange(e)}\n                                        required/>\n                                    <div className=\"invalid-feedback\">\n                                        <FormattedMessage id='project.global.validator.required'/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <label htmlFor=\"email\" className=\"col-md-3 col-form-label\">\n                                    <FormattedMessage id=\"project.global.fields.email\"/>\n                                </label>\n                                <div className=\"col-md-4\">\n                                    <input type=\"email\" id=\"email\" className=\"form-control\"\n                                        value={this.state.email}\n                                        onChange={(e) => this.handleEmailChange(e)}\n                                        required/>\n                                    <div className=\"invalid-feedback\">\n                                        <FormattedMessage id='project.global.validator.email'/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <div className=\"offset-md-3 col-md-1\">\n                                    <button type=\"submit\" className=\"btn btn-primary\">\n                                        <FormattedMessage id=\"project.global.buttons.save\"/>\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\n    user: selectors.getUser(state)\n});\n\nconst mapDispatchToProps = {\n    updateProfile: actions.updateProfile\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateProfile);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Errors} from '../../common';\nimport * as actions from '../actions';\nimport * as selectors from '../selectors';\n\nconst initialState = {\n    oldPassword: '',\n    newPassword: '',\n    confirmNewPassword: '',\n    backendNewErrors: null,\n    passwordsDoNotMatch: false\n};\n\nclass ChangePassword extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = initialState;\n\n    }\n\n    handleOldPasswordChange(event) {\n        this.setState({oldPassword: event.target.value});\n    }\n\n    handleNewPasswordChange(event) {\n        this.setState({newPassword: event.target.value});\n    }\n\n    handleConfirmNewPasswordChange(event) {\n\n        this.confirmNewPasswordInput.setCustomValidity('');\n        this.setState({confirmNewPassword: event.target.value,\n            passwordsDoNotMatch: false});\n    \n    }\n\n    handleSubmit(event) {\n\n        event.preventDefault();\n\n        if (this.form.checkValidity() && this.checkConfirmNewPassword()) {\n            this.changePasword();\n        } else {\n            this.setBackendErrors(null);\n            this.form.classList.add('was-validated');\n        }\n\n    }\n\n    checkConfirmNewPassword() {\n\n        if (this.state.newPassword !== this.state.confirmNewPassword) {\n\n            this.confirmNewPasswordInput.setCustomValidity('error');\n            this.setState({passwordsDoNotMatch: true});\n\n            return false;\n\n        } else {\n            return true;\n        }\n\n    }\n\n    changePasword() {\n\n        this.props.changePassword(this.props.id, this.state.oldPassword,\n            this.state.newPassword,\n            () => this.props.history.push('/'),\n            errors => this.setBackendErrors(errors));\n        \n    }\n\n    setBackendErrors(backendErrors) {\n        this.setState({backendErrors});\n    }\n\n    handleErrorsClose() {\n        this.setState({backendErrors: null});\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Errors errors={this.state.backendErrors} onClose={() => this.handleErrorsClose()}/>\n                <div className=\"card bg-light border-dark\">\n                    <h5 className=\"card-header\">\n                        <FormattedMessage id=\"project.users.ChangePassword.title\"/>\n                    </h5>\n                    <div className=\"card-body\">\n                        <form ref={node => this.form = node} \n                            className=\"needs-validation\" noValidate onSubmit={(e) => this.handleSubmit(e)}>\n                            <div className=\"form-group row\">\n                                <label htmlFor=\"oldPassword\" className=\"col-md-3 col-form-label\">\n                                    <FormattedMessage id=\"project.users.ChangePassword.fields.oldPassword\"/>\n                                </label>\n                                <div className=\"col-md-4\">\n                                    <input type=\"password\" id=\"oldPassword\" className=\"form-control\"\n                                        value={this.state.password}\n                                        onChange={(e) => this.handleOldPasswordChange(e)}\n                                        autoFocus\n                                        required/>\n                                    <div className=\"invalid-feedback\">\n                                        <FormattedMessage id='project.global.validator.required'/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <label htmlFor=\"newPassword\" className=\"col-md-3 col-form-label\">\n                                    <FormattedMessage id=\"project.users.ChangePassword.fields.newPassword\"/>\n                                </label>\n                                <div className=\"col-md-4\">\n                                    <input type=\"password\" id=\"newPassword\" className=\"form-control\"\n                                        value={this.state.password}\n                                        onChange={(e) => this.handleNewPasswordChange(e)}\n                                        required/>\n                                    <div className=\"invalid-feedback\">\n                                        <FormattedMessage id='project.global.validator.required'/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <label htmlFor=\"confirmNewPassword\" className=\"col-md-3 col-form-label\">\n                                    <FormattedMessage id=\"project.users.ChangePassword.fields.confirmNewPassword\"/>\n                                </label>\n                                <div className=\"col-md-4\">\n                                    <input ref={node => this.confirmNewPasswordInput = node}\n                                        type=\"password\" id=\"confirmNewPassword\" className=\"form-control\"\n                                        value={this.state.confirmPassword}\n                                        onChange={(e) => this.handleConfirmNewPasswordChange(e)}\n                                        required/>\n                                    <div className=\"invalid-feedback\">\n                                        {this.state.passwordsDoNotMatch ?\n                                            <FormattedMessage id='project.global.validator.passwordsDoNotMatch'/> :\n                                            <FormattedMessage id='project.global.validator.required'/>}\n                                        \n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <div className=\"offset-md-3 col-md-1\">\n                                    <button type=\"submit\" className=\"btn btn-primary\">\n                                        <FormattedMessage id=\"project.global.buttons.save\"/>\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\n    id: selectors.getUser(state).id\n});\n\nconst mapDispatchToProps = {\n    changePassword: actions.changePassword\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword);\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport users from '../../users';\n\nclass Logout extends React.Component {\n\n    componentDidMount() {\n\n        this.props.dispatch(users.actions.logout());\n        this.props.history.push('/');\n\n    }\n\n    render() {\n        return null;\n    }\n\n}\n\nexport default connect()(Logout);","import * as actions from './actions';\nimport * as actionTypes from './actionTypes';\nimport reducer from './reducer';\nimport * as selectors from './selectors';\n\nexport {default as Login} from './components/Login';\nexport {default as SignUp} from './components/SignUp';\nexport {default as UpdateProfile} from './components/UpdateProfile';\nexport {default as ChangePassword} from './components/ChangePassword';\nexport {default as Logout} from './components/Logout';\n\nexport default {actions, actionTypes, reducer, selectors};","export const SHOPPING_CART_UPDATED = \"project/shopping/shoppingCartUpdated\";\nexport const BUY_COMPLETED = \"project/shopping/buyCompleted\";\nexport const CLEAR_ORDER_SEARCH = \"project/shopping/clearOrderSearch\";\nexport const FIND_ORDERS_COMPLETED = \"project/shopping/findOrdersCompleted\";\nexport const CLEAR_ORDER = \"project/shopping/clearOrder\";\nexport const FIND_ORDER_COMPLETED = \"project/shopping/findOrderCompleted\";","import backend from '../../backend';\nimport * as actionTypes from './actionTypes';\n\nconst shoppingCartUpdated = shoppingCart => ({\n    type: actionTypes.SHOPPING_CART_UPDATED,\n    shoppingCart\n});\n\nexport const addToShoppingCart = (shoppingCartId, productId, quantity,\n    onSuccess, onErrors) => dispatch =>\n    backend.shoppingService.addToShoppingCart(shoppingCartId, productId,\n        quantity, shoppingCart => {\n            dispatch(shoppingCartUpdated(shoppingCart));\n            onSuccess();\n        },\n        onErrors);\n\nexport const updateShoppingCartItemQuantity = (shoppingCartId, productId, \n    quantity, onSuccess, onErrors) => dispatch => \n    backend.shoppingService.updateShoppingCartItemQuantity(shoppingCartId,\n        productId, quantity, shoppingCart => {\n            dispatch(shoppingCartUpdated(shoppingCart));\n            onSuccess();\n        },\n        onErrors);\n\nexport const removeShoppingCartItem = (shoppingCartId, productId, onSuccess, \n    onErrors) => dispatch => \n    backend.shoppingService.removeShoppingCartItem(shoppingCartId,\n        productId, shoppingCart => {\n            dispatch(shoppingCartUpdated(shoppingCart));\n            onSuccess();\n        },\n        onErrors);\n\nconst buyCompleted = (orderId) => ({\n    type: actionTypes.BUY_COMPLETED,\n    orderId\n});\n\nexport const buy = (shoppingCartId, postalAddress, postalCode, onSuccess, \n    onErrors) => dispatch =>\n    backend.shoppingService.buy(shoppingCartId, postalAddress, postalCode, ({id}) => {\n        dispatch(buyCompleted(id));\n        onSuccess();\n    },\n    onErrors);\n\nconst findOrdersCompleted = orderSearch => ({\n    type: actionTypes.FIND_ORDERS_COMPLETED,\n    orderSearch\n});\n\nconst clearOrderSearch = () => ({\n    type: actionTypes.CLEAR_ORDER_SEARCH\n});\n\nexport const findOrders = criteria => dispatch => {\n\n    dispatch(clearOrderSearch());\n    backend.shoppingService.findOrders(criteria, \n        result => dispatch(findOrdersCompleted({criteria, result})));\n\n}    \n\nexport const previousFindOrdersResultPage = criteria => \n    findOrders({page: criteria.page-1});\n\nexport const nextFindOrdersResultPage = criteria => \n    findOrders({page: criteria.page+1});\n\nconst findOrderCompleted = order => ({\n    type: actionTypes.FIND_ORDER_COMPLETED,\n    order\n});\n\nexport const clearOrder = () => ({\n    type: actionTypes.CLEAR_ORDER\n});\n\nexport const findOrder = orderId => dispatch => {\n    backend.shoppingService.findOrder(orderId, order => {\n        dispatch(findOrderCompleted(order));\n    });\n}","import {combineReducers} from 'redux';\n\nimport users from '../users';\nimport * as actionTypes from './actionTypes';\n\nconst initialState = {\n    shoppingCart: null,\n    lastOrderId: null,\n    orderSearch: null,\n    order: null\n};\n\nconst shoppingCart = (state = initialState.shoppingCart, action) => {\n\n    switch (action.type) {\n\n        case users.actionTypes.LOGIN_COMPLETED:\n            return action.authenticatedUser.shoppingCart;\n\n        case users.actionTypes.SIGN_UP_COMPLETED:\n            return action.authenticatedUser.shoppingCart;\n\n        case actionTypes.SHOPPING_CART_UPDATED:\n            return action.shoppingCart;\n\n        case actionTypes.BUY_COMPLETED:\n            return {id: state.id, items: [], totalPrice: 0, totalQuantity: 0};\n\n        default:\n            return state;\n\n    }\n\n}\n\nconst lastOrderId = (state = initialState.lastOrderId, action) => {\n\n    switch (action.type) {\n\n        case actionTypes.BUY_COMPLETED:\n            return action.orderId;\n\n        default:\n            return state;\n\n    }\n\n}\n\nconst orderSearch = (state = initialState.orderSearch, action) => {\n\n    switch (action.type) {\n\n        case actionTypes.FIND_ORDERS_COMPLETED:\n            return action.orderSearch;\n\n        case actionTypes.CLEAR_ORDER_SEARCH:\n            return initialState.orderSearch;\n\n        default:\n            return state;\n\n    }\n\n}\n\nconst order = (state = initialState.order, action) => {\n\n    switch (action.type) {\n\n        case actionTypes.FIND_ORDER_COMPLETED:\n            return action.order;\n\n        case actionTypes.CLEAR_ORDER:\n            return initialState.order;\n\n        default:\n            return state;\n\n    }\n\n}\n\nconst reducer = combineReducers({\n    shoppingCart,\n    lastOrderId,\n    orderSearch,\n    order\n});\n\nexport default reducer;\n\n\n","const getModuleState = state => state.shopping;\n\nexport const getShoppingCart = state => \n    getModuleState(state).shoppingCart;\n\nexport const getLastOrderId = state =>\n    getModuleState(state).lastOrderId;\n\nexport const getOrderSearch = state =>\n    getModuleState(state).orderSearch;\n\nexport const getOrder = state =>\n    getModuleState(state).order;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {FormattedMessage} from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport {Errors} from '../../common';\nimport * as actions from '../actions';\nimport * as selectors from '../selectors';\n\nclass AddToShoppingCart extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            quantity: 1,\n            backendErrors: null\n        };\n\n    }\n\n    handleQuantityChange(event) {\n        this.setState({quantity: Number(event.target.value)});\n    }\n\n    handleSubmit(event) {\n\n        event.preventDefault();\n\n        if (this.form.checkValidity()) {\n            this.props.addToShoppingCart(this.props.shoppingCartId, \n                this.props.productId, this.state.quantity,\n                () => this.props.history.push('/shopping/shopping-cart'),\n                errors => this.setBackendErrors(errors));\n        } else {\n            this.setBackendErrors(null);\n            this.form.classList.add('was-validated');\n        }\n\n    }\n\n    setBackendErrors(backendErrors) {\n        this.setState({backendErrors});\n    }\n\n    handleErrorsClose() {\n        this.setState({backendErrors: null});\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Errors errors={this.state.backendErrors} onClose={() => this.handleErrorsClose()}/>\n                <form ref={node => this.form = node}\n                    className=\"needs-validation\" noValidate \n                    onSubmit={(e) => this.handleSubmit(e)}>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"quantity\" className=\"offset-md-5 col-md-1 col-form-label\">\n                            <FormattedMessage id=\"project.global.fields.quantity\"/>\n                        </label>\n                        <div className=\"col-md-2\">\n                            <input type=\"number\" id=\"quantity\" className=\"form-control\"\n                                value={this.state.quantity}\n                                onChange={(e) => this.handleQuantityChange(e)}\n                                autoFocus\n                                min=\"1\" />\n                            <div className=\"invalid-feedback\">\n                                <FormattedMessage id='project.global.validator.incorrectQuantity'/>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <div className=\"offset-md-6 col-md-2\">\n                            <button type=\"submit\" className=\"btn btn-primary\">\n                                <FormattedMessage id=\"project.shopping.AddToCart.add\"/>\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\n    shoppingCartId: selectors.getShoppingCart(state).id\n});\n\nconst mapDispatchToProps = {\n    addToShoppingCart: actions.addToShoppingCart\n}\n\nAddToShoppingCart = connect(\n    mapStateToProps, mapDispatchToProps)(AddToShoppingCart);\n\nAddToShoppingCart.propTypes = {\n    productId: PropTypes.number.isRequired,\n    history: PropTypes.object.isRequired\n};\n\nexport default AddToShoppingCart;\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport * as selectors from '../selectors';\n\nlet ShoppingCartIcon = ({totalQuantity}) => (\n    <div>\n        <span className=\"fas fa-shopping-cart\"></span>&nbsp;\n        ({totalQuantity})\n    </div>\n);\n\nconst mapStateToProps = (state) => ({\n    totalQuantity: selectors.getShoppingCart(state).totalQuantity\n});\n\nShoppingCartIcon = connect(mapStateToProps)(ShoppingCartIcon);\n\nexport default ShoppingCartIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage, FormattedNumber} from 'react-intl';\n\nimport {ProductLink} from '../../common';\n\nclass ShoppingItem extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            quantity: props.item.quantity\n        };\n\n    }\n\n    handleQuantityChange(event) {\n        this.setState({quantity: Number(event.target.value)});\n    }\n\n    handleSubmit(event) {\n\n        event.preventDefault();\n\n        if (this.form.checkValidity()) {\n            this.handleUpdateQuantity();\n        } else {\n            this.props.onBackendErrors(null);\n            this.form.classList.add('was-validated');\n        }\n    \n    }\n\n    handleRemoveItem() {\n\n        this.props.onRemoveItem(this.props.shoppingItemListId,\n            this.props.item.productId, \n            () => {\n                this.props.onBackendErrors(null);\n            }, \n            backendErrors => {\n                this.props.onBackendErrors(backendErrors);\n            });\n\n    }\n\n    handleUpdateQuantity() {\n\n        this.props.onUpdateQuantity(this.props.shoppingItemListId,\n            this.props.item.productId, this.state.quantity, \n            () => {\n                this.setState({quantity: this.props.item.quantity});\n                this.props.onBackendErrors(null);\n            }, \n            backendErrors => {\n                this.setState({quantity: this.props.item.quantity});\n                this.props.onBackendErrors(backendErrors);\n            });\n\n    }\n\n    render() {\n\n        const {item, edit} = this.props;\n\n        return (\n            <tr>                   \n                <td>\n                    { edit &&\n                    <span>\n                        <button type=\"button\" className=\"btn btn-danger btn-sm\"\n                            onClick={() => this.handleRemoveItem()}>\n                            <span className=\"fas fa-trash-alt\"></span>\n                        </button>\n                        &nbsp;\n                        &nbsp;\n                    </span>\n                    }\n                    <ProductLink id={item.productId} name={item.productName}/>\n                </td>\n                <td><FormattedNumber value={item.productPrice}/>€</td>\n                { edit &&\n                <td>\n                    <form ref={node => this.form = node} \n                        className=\"form-inline needs-validation\" \n                        noValidate onSubmit={(e) => this.handleSubmit(e)}>\n                        <input type=\"number\" className=\"form-control mr-2\" style={{width: '50%'}}\n                            value={this.state.quantity}\n                            onChange={(e) => this.handleQuantityChange(e)}\n                            min=\"1\"/>\n                        <button type=\"submit\" className=\"btn btn-primary\">\n                            <FormattedMessage id=\"project.global.buttons.save\"/>\n                        </button>\n                        <div className=\"invalid-feedback\">\n                            <FormattedMessage id='project.global.validator.incorrectQuantity'/>\n                        </div>\n                    </form>\n                </td>\n                }\n                {!edit && <td>{item.quantity}</td>}\n            </tr>\n        );\n\n    }\n\n}\n\nShoppingItem.propTypes = {\n    shoppingItemListId: PropTypes.number.isRequired,\n    item: PropTypes.object.isRequired,\n    edit: PropTypes.bool,\n    onUpdateQuantity: PropTypes.func,\n    onRemoveItem: PropTypes.func,\n    onBackendErrors: PropTypes.func\n}\n\nexport default ShoppingItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage, FormattedNumber} from 'react-intl';\n\nimport ShoppingItem from './ShoppingItem';\nimport {Errors} from '../../common';\n\nconst initialState = {\n    backendErrors: null\n};\n\nclass ShoppingItemList extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = initialState;\n\n    }\n\n    setBackendErrors(backendErrors) {\n        this.setState({backendErrors});\n    }\n\n    handleErrorsClose() {\n        this.setState({backendErrors: null});\n    }\n\n    render() {\n\n        const {list, edit, onUpdateQuantity, onRemoveItem} = this.props;\n\n        if (list.items.length === 0) {\n            return (\n                <div className=\"alert alert-info\" role=\"alert\">\n                    <FormattedMessage id='project.shopping.ShoppingCart.empty'/>\n                </div>\n            );\n        }\n\n        return (\n\n            <div>\n\n                <Errors errors={this.state.backendErrors}\n                    onClose={() => this.handleErrorsClose()}/>\n\n                <table className=\"table\">\n\n                    <thead>\n                        <tr>\n                            <th scope=\"col\" style={{width: '60%'}}></th>\n                            <th scope=\"col\" style={{width: '20%'}}>\n                                <FormattedMessage id='project.global.fields.price'/>\n                            </th>\n                            <th scope=\"col\" style={{width: '20%'}}>\n                                <FormattedMessage id='project.global.fields.quantity'/>\n                            </th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {list.items.map(item => \n                            <ShoppingItem shoppingItemListId={list.id}\n                                key={item.productId} item={item}\n                                edit={edit} \n                                onUpdateQuantity={onUpdateQuantity}\n                                onRemoveItem={onRemoveItem}\n                                onBackendErrors={errors => this.setBackendErrors(errors)}/>\n                        )}\n                    </tbody>\n\n                </table>\n\n                <p className=\"text-center font-weight-bold\">\n                    <FormattedMessage id='project.global.fields.totalPrice'/> \n                    : <FormattedNumber value={list.totalPrice}/>€\n                </p>\n\n            </div>\n\n        );\n\n    }\n\n}\n\nShoppingItemList.propTypes = {\n    list: PropTypes.object.isRequired,\n    edit: PropTypes.bool,\n    onUpdateQuantity: PropTypes.func,\n    onRemoveItem: PropTypes.func\n}\n\nexport default ShoppingItemList;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {FormattedMessage} from 'react-intl';\n\nimport ShoppingItemList from './ShoppingItemList';\nimport * as selectors from '../selectors';\nimport * as actions from '../actions';\n\nconst ShoppingCart = ({cart, history, onUpdateQuantity, onRemoveItem}) => (\n\n    <div>\n        <ShoppingItemList list={cart} edit\n            onUpdateQuantity={onUpdateQuantity}\n            onRemoveItem={onRemoveItem}/>\n        {cart.items.length > 0 &&\n        <div className=\"text-center\">\n            <button type=\"button\" className=\"btn btn-primary\"\n                onClick={() => history.push('/shopping/buy')}>\n                <FormattedMessage id=\"project.global.buttons.buy\"/>\n            </button>\n        </div>\n        }\n    </div>\n\n);\n\nconst mapStateToProps = state => ({\n    cart: selectors.getShoppingCart(state)\n});\n\nconst mapDispatchToProps = {\n    onUpdateQuantity: actions.updateShoppingCartItemQuantity,\n    onRemoveItem: actions.removeShoppingCartItem\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCart);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {FormattedMessage} from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport {Errors} from '../../common';\nimport * as actions from '../actions';\nimport * as selectors from '../selectors';\n\nconst initialState = {\n    postalAddress: '',\n    postalCode: '',\n    backendErrors: null\n};\n\nclass BuyForm extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = initialState;\n\n    }\n\n    handlePostalAddressChange(event) {\n        this.setState({postalAddress: event.target.value});\n    }\n\n    handlePostalCodeChange(event) {\n        this.setState({postalCode: event.target.value});\n    }\n\n    handleSubmit(event) {\n\n        event.preventDefault();\n\n        if (this.form.checkValidity()) {\n            this.buy();\n        } else {\n            this.setBackendErrors(null);\n            this.form.classList.add('was-validated');\n        }\n\n    }\n\n    buy() {\n\n        this.props.buy(this.props.shoppingCartId, \n            this.state.postalAddress.trim(), this.state.postalCode.trim(), \n            () => this.props.history.push('/shopping/purchase-completed'),\n            errors => this.setBackendErrors(errors));\n\n    }\n\n    setBackendErrors(backendErrors) {\n        this.setState({backendErrors});\n    }\n\n    handleErrorsClose() {\n        this.setState({backendErrors: null});\n    }\n\n    render() {\n\n        return (\n\n            <div>\n                <Errors errors={this.state.backendErrors}\n                    onClose={() => this.handleErrorsClose()}/>\n                <div className=\"card bg-light border-dark\">\n                    <h5 className=\"card-header\">\n                        <FormattedMessage id=\"project.shopping.BuyForm.title\"/>\n                    </h5>\n                    <div className=\"card-body\">\n                        <form ref={node => this.form = node}\n                            className=\"needs-validation\" noValidate \n                            onSubmit={(e) => this.handleSubmit(e)}>\n                            <div className=\"form-group row\">\n                                <label htmlFor=\"postalAddress\" className=\"col-md-3 col-form-label\">\n                                    <FormattedMessage id=\"project.global.fields.postalAddress\"/>\n                                </label>\n                                <div className=\"col-md-4\">\n                                    <input type=\"text\" id=\"postalAddress\" className=\"form-control\"\n                                        value={this.state.postalAddress}\n                                        onChange={(e) => this.handlePostalAddressChange(e)}\n                                        autoFocus\n                                        required/>\n                                    <div className=\"invalid-feedback\">\n                                        <FormattedMessage id='project.global.validator.required'/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <label htmlFor=\"postalCode\" className=\"col-md-3 col-form-label\">\n                                    <FormattedMessage id=\"project.global.fields.postalCode\"/>\n                                </label>\n                                <div className=\"col-md-4\">\n                                    <input type=\"text\" id=\"postalCode\" className=\"form-control\"\n                                        value={this.state.postalCode}\n                                        onChange={(e) => this.handlePostalCodeChange(e)}\n                                        required/>\n                                    <div className=\"invalid-feedback\">\n                                        <FormattedMessage id='project.global.validator.required'/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <div className=\"offset-md-3 col-md-1\">\n                                    <button type=\"submit\" className=\"btn btn-primary\">\n                                        <FormattedMessage id=\"project.global.buttons.buy\"/>\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n        );\n\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\n    shoppingCartId: selectors.getShoppingCart(state).id\n});\n\nconst mapDispatchToProps = {\n    buy: actions.buy\n}\n\nBuyForm = connect(mapStateToProps, mapDispatchToProps)(BuyForm);\n\nBuyForm.propTypes = {\n    history: PropTypes.object.isRequired\n};\n\nexport default BuyForm;\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport ShoppingItemList from './ShoppingItemList';\nimport BuyForm from './BuyForm';\nimport * as selectors from '../selectors';\n\nconst Buy = ({cart, history}) => cart.items.length > 0 && (\n    <div>\n        <BuyForm history={history}/>\n        <ShoppingItemList list={cart}/>\n    </div>\n);\n\nconst mapStateToProps = state => ({\n    cart: selectors.getShoppingCart(state)\n});\n\nexport default connect(mapStateToProps)(Buy);","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst OrderLink = ({id}) => {\n\n    \n    return (\n        <Link to={`/shopping/order-details/${id}`}>\n            {id}\n        </Link>\n    );\n\n}\n\nexport default OrderLink;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as selectors from '../selectors';\nimport OrderLink from './OrderLink';\n\nconst PurchaseCompleted = ({orderId}) => orderId && (\n    <div className=\"alert alert-success\" role=\"alert\">\n        <FormattedMessage id=\"project.shopping.PurchaseCompleted.purchaseOrderGenerated\"/>:\n        &nbsp;\n        <OrderLink id={orderId}/>\n    </div>\n);\n\nconst mapStateToProps = state => ({\n    orderId: selectors.getLastOrderId(state)\n});\n\nexport default connect(mapStateToProps)(PurchaseCompleted);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport * as actions from '../actions';\n\nclass FindOrders extends React.Component {\n\n    componentDidMount() {\n\n        this.props.dispatch(actions.findOrders({page: 0}));\n        this.props.history.push('/shopping/find-orders-result');\n\n    }\n\n    render() {\n        return null;\n    }\n\n}\n\nexport default connect()(FindOrders);","import React from 'react';\nimport {FormattedMessage, FormattedDate, FormattedTime} from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport OrderLink from './OrderLink';\n\nconst Orders = ({orders}) => (\n\n    <table className=\"table table-striped table-hover\">\n\n        <thead>\n            <tr>\n                <th scope=\"col\">\n                    <FormattedMessage id='project.global.fields.purchaseOrder'/>\n                </th>\n                <th scope=\"col\">\n                    <FormattedMessage id='project.global.fields.date'/>\n                </th>\n            </tr>\n        </thead>\n\n        <tbody>\n            {orders.map(order => \n                <tr key={order.id}>\n                    <td><OrderLink id={order.id}/></td>\n                    <td>\n                        <FormattedDate value={new Date(order.date)}/> - <FormattedTime value={new Date(order.date)}/>\n                    </td>\n                </tr>\n            )}\n        </tbody>\n\n    </table>\n\n);\n\nOrders.propTypes = {\n    orders: PropTypes.array.isRequired\n};\n\nexport default Orders;\n\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as actions from '../actions';\nimport * as selectors from '../selectors';\nimport {Pager} from '../../common';\nimport Orders from './Orders';\n\nconst FindOrdersResult = ({orderSearch, previousFindOrdersResultPage, nextFindOrdersResultPage}) => {\n\n    if (!orderSearch) {\n        return null;\n    }\n\n    if (orderSearch.result.items.length === 0) {\n        return (\n            <div className=\"alert alert-info\" role=\"alert\">\n                <FormattedMessage id='project.shopping.FindOrdersResult.noOrders'/>\n            </div>\n        );\n    }\n\n    return (\n\n        <div>\n            <Orders orders={orderSearch.result.items}/>\n            <Pager \n                back={{\n                    enabled: orderSearch.criteria.page >= 1,\n                    onClick: () => previousFindOrdersResultPage(orderSearch.criteria)}}\n                next={{\n                    enabled: orderSearch.result.existMoreItems,\n                    onClick: () => nextFindOrdersResultPage(orderSearch.criteria)}}/>\n        </div>\n\n    );\n\n}\n\n\nconst mapStateToProps = state => ({\n    orderSearch: selectors.getOrderSearch(state)\n});\n\nconst mapDispatchToProps = {\n    findOrders: actions.findOrders,\n    previousFindOrdersResultPage: actions.previousFindOrdersResultPage,\n    nextFindOrdersResultPage: actions.nextFindOrdersResultPage\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FindOrdersResult);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {FormattedMessage, FormattedDate, FormattedTime} from 'react-intl';\n\nimport * as actions from '../actions';\nimport * as selectors from '../selectors';\nimport ShoppingItemList from './ShoppingItemList';\nimport {BackLink} from '../../common';\n\nclass OrderDetails extends React.Component {\n\n    componentDidMount() {\n\n        const id = Number(this.props.match.params.id);\n\n        if (!Number.isNaN(id)) {   \n            this.props.findOrder(id);\n        }\n\n    }\n\n    componentWillUnmount() {\n        this.props.clearOrder();\n    }\n\n    render() {\n\n        const order = this.props.order;\n\n        if (!order) {\n            return null;\n        }\n\n        return (\n\n            <div>\n\n                <BackLink/>\n\n                <div className=\"card text-center\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">\n                            <FormattedMessage id='project.global.fields.purchaseOrder'/> {order.id} \n                        </h5>\n                        <h6 className=\"card-subtitle text-muted\">\n                            <FormattedDate value={new Date(order.date)}/> - <FormattedTime value={new Date(order.date)}/>\n                        </h6>\n                        <p className=\"card-text\">\n                            {order.postalAddress} - {order.postalCode} \n                        </p>\n                    </div>\n                </div>\n\n                <ShoppingItemList list={order}/>\n\n            </div>\n\n        );\n\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    order: selectors.getOrder(state)\n});\n\nconst mapDispatchToProps = {\n    findOrder: actions.findOrder,\n    clearOrder: actions.clearOrder\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderDetails);","import * as actions from './actions';\nimport reducer from './reducer';\nimport * as selectors from './selectors';\n\nexport {default as AddToShoppingCart} from './components/AddToShoppingCart';\nexport {default as ShoppingCartIcon} from './components/ShoppingCartIcon';\nexport {default as ShoppingCart} from './components/ShoppingCart';\nexport {default as Buy} from './components/Buy';\nexport {default as PurchaseCompleted} from './components/PurchaseCompleted';\nexport {default as FindOrders} from './components/FindOrders';\nexport {default as FindOrdersResult} from './components/FindOrdersResult';\nexport {default as OrderDetails} from './components/OrderDetails';\n\nexport default {actions, reducer, selectors};","import React from 'react';\nimport {connect} from 'react-redux';\nimport {FormattedMessage, FormattedNumber} from 'react-intl';\n\nimport users from '../../users';\nimport * as selectors from '../selectors';\nimport * as actions from '../actions';\nimport {AddToShoppingCart} from '../../shopping';\nimport {BackLink} from '../../common';\n\nclass ProductDetails extends React.Component {\n\n    componentDidMount() {\n\n        const id = Number(this.props.match.params.id);\n\n        if (!Number.isNaN(id)) {\n            this.props.findProductById(id);\n        }\n    \n    }\n\n    componentWillUnmount() {\n        this.props.clearProduct();\n    }\n\n    render() {\n\n        const product = this.props.product;\n\n        if (!product) {\n            return null;\n        }\n        \n        return (\n\n            <div>\n\n                <BackLink/>\n                \n                <div className=\"card text-center\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{product.name}</h5>\n                        <h6 className=\"card-subtitle text-muted\">\n                            <FormattedMessage id='project.global.fields.department'/>:&nbsp;\n                                {selectors.getCategoryName(this.props.categories, product.categoryId)}\n                        </h6>\n                        <p className=\"card-text\">{product.description}</p>\n                        <p className=\"card-text font-weight-bold\">\n                            <FormattedMessage id='project.global.fields.price'/>\n                            : <FormattedNumber value={product.price}/>€\n                        </p>\n                    </div>\n                </div>\n\n                {this.props.loggedIn && \n                    <div>\n                        <br/>\n                        <AddToShoppingCart productId={product.id} \n                            history={this.props.history}/>\n                    </div>\n                }\n\n            </div>\n    \n        );\n\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\n    loggedIn: users.selectors.isLoggedIn(state),\n    product: selectors.getProduct(state),\n    categories: selectors.getCategories(state)\n});\n\nconst mapDispatchToProps = {\n    findProductById: actions.findProductById,\n    clearProduct: actions.clearProduct\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetails);","import * as actions from './actions';\nimport * as actionTypes from './actionTypes';\nimport reducer from './reducer';\nimport * as selectors from './selectors';\n\nexport {default as FindProducts} from './components/FindProducts';\nexport {default as FindProductsResult} from './components/FindProductsResult';\nexport {default as ProductDetails} from './components/ProductDetails';\n\nexport default {actions, actionTypes, reducer, selectors};\n\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport {FindProducts} from '../../catalog';\nimport {ShoppingCartIcon} from '../../shopping';\nimport users from '../../users';\n\nconst Header = ({userName}) => (\n\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light border\">\n        <Link className=\"navbar-brand\" to=\"/\">PA Shop</Link>\n        <button className=\"navbar-toggler\" type=\"button\" \n            data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" \n            aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" \n            aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\n            <ul className=\"navbar-nav mr-auto\">\n                <li>\n                    <FindProducts/>\n                </li>\n            </ul>\n\n            \n            {userName ? \n\n            <ul className=\"navbar-nav\">\n\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/shopping/shopping-cart\">\n                        <ShoppingCartIcon/>\n                    </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/shopping/find-orders\">\n                        <FormattedMessage id=\"project.shopping.header.orders\"/>\n                    </Link>\n                </li>\n                \n                <li className=\"nav-item dropdown\">\n\n                    <a className=\"dropdown-toggle nav-link\" href=\"/\"\n                        data-toggle=\"dropdown\">\n                        <span className=\"fas fa-user\"></span>&nbsp;\n                        {userName}\n                    </a>\n                    <div className=\"dropdown-menu dropdown-menu-right\">\n                        <Link className=\"dropdown-item\" to=\"/users/update-profile\">\n                            <FormattedMessage id=\"project.users.UpdateProfile.title\"/>\n                        </Link>\n                        <Link className=\"dropdown-item\" to=\"/users/change-password\">\n                            <FormattedMessage id=\"project.users.ChangePassword.title\"/>\n                        </Link>\n                        <div className=\"dropdown-divider\"></div>\n                        <Link className=\"dropdown-item\" to=\"/users/logout\">\n                            <FormattedMessage id=\"project.app.Header.logout\"/>\n                        </Link>\n                    </div>\n\n                </li>\n\n            </ul>\n            \n            :\n\n            <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/users/login\">\n                        <FormattedMessage id=\"project.users.Login.title\"/>\n                    </Link>\n                </li>\n            </ul>\n            \n            }\n\n        </div>\n    </nav>\n\n);\n\nconst mapStateToProps = state => ({\n    userName: users.selectors.getUserName(state)\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {ErrorDialog, Loader} from '../../common';\nimport * as actions from '../actions';\nimport * as selectors from '../selectors';\n\nconst errorMapStateToProps = state => ({\n    error: selectors.getError(state)\n});\n\nconst errorMapDispatchToProps = dispatch => ({\n    onClose: () =>dispatch(actions.error(null))\n});\n\nconst ConnectedErrorDialog = \n    connect(errorMapStateToProps, errorMapDispatchToProps)(ErrorDialog);\n\nconst loadingMapStateToProps = state => ({\n    loading: selectors.isLoading(state)\n});\n\nconst ConnectedLoader = connect(loadingMapStateToProps)(Loader);\n\nconst AppGlobalComponents = () => (\n\n    <div>\n        <ConnectedErrorDialog/>\n        <ConnectedLoader/>\n    </div>\n\n);\n\nexport default AppGlobalComponents;","import React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nconst Home = () => (\n    <div className=\"text-center\">\n        <FormattedMessage id=\"project.app.Home.welcome\"/>\n    </div>\n);\n\nexport default Home;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Route, Switch, withRouter} from 'react-router-dom';\n\nimport AppGlobalComponents from './AppGlobalComponents';\nimport Home from './Home';\nimport {Login, SignUp, UpdateProfile, ChangePassword, Logout} from '../../users';\nimport users from '../../users';\nimport {FindProductsResult, ProductDetails} from '../../catalog';\nimport {ShoppingCart, Buy, PurchaseCompleted, FindOrders, FindOrdersResult, OrderDetails} from '../../shopping';\n\nconst Body = ({loggedIn}) => (\n\n    <div className=\"container\">\n        <br/>\n        <AppGlobalComponents/>\n        <Switch>\n            <Route exact path=\"/\" component={Home}/>\n            <Route exact path=\"/catalog/find-products-result\" component={FindProductsResult}/>\n            <Route exact path=\"/catalog/product-details/:id\" component={ProductDetails}/>\n            {loggedIn && <Route exact path=\"/shopping/shopping-cart\" component={ShoppingCart}/>}\n            {loggedIn && <Route exact path=\"/shopping/buy\" component={Buy}/>}\n            {loggedIn && <Route exact path=\"/shopping/purchase-completed\" component={PurchaseCompleted}/>}\n            {loggedIn && <Route exact path=\"/shopping/find-orders\" component={FindOrders}/>}\n            {loggedIn && <Route exact path=\"/shopping/find-orders-result\" component={FindOrdersResult}/>}\n            {loggedIn && <Route exact path=\"/shopping/order-details/:id\" component={OrderDetails}/>}\n            {loggedIn && <Route exact path=\"/users/update-profile\" component={UpdateProfile}/>}\n            {loggedIn && <Route exact path=\"/users/change-password\" component={ChangePassword}/>}\n            {loggedIn && <Route exact path=\"/users/logout\" component={Logout}/>}\n            {!loggedIn && <Route exact path=\"/users/login\" component={Login}/>}\n            {!loggedIn && <Route exact path=\"/users/signup\" component={SignUp}/>}\n            <Route component={Home}/>\n        </Switch>\n    </div>\n\n);\n\nconst mapStateToProps = state => ({\n    loggedIn: users.selectors.isLoggedIn(state)\n});\n\n/*\n * It is necessary to call withRouter(connect(...)(FindProducts)), since Body\n * must be re-rendered when 'location' changes (among others, withRouter pass\n * 'location' property to the wrapped component).\n */\nexport default withRouter(connect(mapStateToProps)(Body));\n","import React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nconst Footer = () => (\n\n    <div>\n        <br/>\n        <hr/>\n        <footer>\n            <p className=\"text-center\">\n                <FormattedMessage id=\"project.app.Footer.text\"/>\n            </p>\n        </footer>\n    </div>\n\n);\n\nexport default Footer;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nimport Header from './Header';\nimport Body from './Body';\nimport Footer from './Footer';\nimport users from '../../users';\nimport catalog from '../../catalog';\n\nconst reauthenticationCallback = dispatch => () => \n    dispatch(users.actions.logout());\n\nclass App extends React.Component {\n\n    componentDidMount() {\n  \n        this.props.dispatch(\n            users.actions.tryLoginFromServiceToken(\n                reauthenticationCallback(this.props.dispatch)));\n\n        this.props.dispatch(catalog.actions.findAllCategories());\n\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Router>\n                    <div>\n                        <Header/>\n                        <Body/>\n                    </div>\n                </Router>\n                <Footer/>\n            </div>\n        );\n\n    }\n\n}\n\nexport default connect()(App);","import * as actions from './actions';\nimport reducer from './reducer'\nimport * as selectors from './selectors';\n\nexport {default as App} from \"./components/App\";\n\nexport default {actions, reducer, selectors};","import {combineReducers} from 'redux';\n\nimport app from '../modules/app';\nimport users from '../modules/users';\nimport catalog from '../modules/catalog';\nimport shopping from '../modules/shopping';\n\nconst rootReducer = combineReducers({\n    app: app.reducer,\n    users: users.reducer,\n    catalog: catalog.reducer,\n    shopping: shopping.reducer\n});\n\nexport default rootReducer;\n","import {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport rootReducer from './rootReducer';\n\nconst configureStore = () => {\n\n    const middlewares = [thunk];\n\n    if (process.env.NODE_ENV !== 'production') {    \n        middlewares.push(logger);\n    }\n\n    return createStore(rootReducer, \n       applyMiddleware(...middlewares));\n\n}\n\nexport default configureStore;","import en from './messages_en';\nimport es from './messages_es';\nimport gl from './messages_gl';\n\nexport default {\n    'en': en,\n    'es': es,\n    'gl': gl\n};","export default {\n\n    'project.app.Footer.text': 'PA Shop - Area of Telematics Engineering - University of A Coruña',\n    'project.app.Header.home': 'Home',\n    'project.app.Header.logout': 'Logout',\n    'project.shopping.header.orders': 'Orders',\n    'project.app.Home.welcome': 'Browse our catalog of products.',\n\n    'project.catalog.CategorySelector.allDepartments': 'All departments',\n    'project.catalog.FindProductsResult.noProductsFound': 'No products found',\n\n    'project.common.ErrorDialog.title': 'Error',\n\n    'project.global.buttons.buy': 'Buy',\n    'project.global.buttons.cancel': 'Cancel',\n    'project.global.buttons.close': 'Close',\n    'project.global.buttons.next': 'Next',\n    'project.global.buttons.ok': 'OK',\n    'project.global.buttons.back': 'Back',\n    'project.global.buttons.save': 'Save',\n    'project.global.buttons.search': 'Search',\n    'project.global.exceptions.NetworkError': 'Network error',\n    'project.global.fields.date': 'Date',\n    'project.global.fields.department': 'Department',\n    'project.global.fields.email': 'Email address',\n    'project.global.fields.firstName': 'First name',\n    'project.global.fields.purchaseOrder': 'Purchase order',\n    'project.global.fields.lastName': 'Last name',\n    'project.global.fields.name': 'Name',\n    'project.global.fields.password': 'Password',\n    'project.global.fields.postalAddress': 'Postal address',\n    'project.global.fields.postalCode': 'Postal code',\n    'project.global.fields.price': 'Price',\n    'project.global.fields.quantity': 'Quantity',\n    'project.global.fields.totalPrice': 'Total price',\n    'project.global.fields.userName': 'Username',\n    'project.global.validator.email': 'Provide a correct e-mail address',\n    'project.global.validator.incorrectQuantity': 'Incorrect quantity',\n    'project.global.validator.passwordsDoNotMatch': 'Passwords do not match',\n    'project.global.validator.required': 'Required field',\n\n    'project.shopping.AddToCart.add': 'Add to cart',\n    'project.shopping.BuyForm.title': 'Buy',\n    'project.shopping.FindOrdersResult.noOrders': 'No orders found',\n    'project.shopping.PurchaseCompleted.purchaseOrderGenerated': 'Purchase order generated',\n    'project.shopping.ShoppingCart.empty': 'Cart is empty',\n\n    'project.users.ChangePassword.fields.confirmNewPassword': 'Confirm new password',\n    'project.users.ChangePassword.fields.newPassword': 'New password',\n    'project.users.ChangePassword.fields.oldPassword': 'Old password',\n    'project.users.ChangePassword.title': 'Change password',\n    'project.users.Login.title': 'Login',\n    'project.users.SignUp.fields.confirmPassword': 'Confirm password',\n    'project.users.SignUp.title': 'Sign up',\n    'project.users.UpdateProfile.title': 'Update profile'\n\n}\n","export default {\n\n    'project.app.Footer.text': 'PA Shop - Area de Ingeniería Telemática - Universidad de A Coruña',\n    'project.app.Header.home': 'Inicio',\n    'project.app.Header.logout': 'Salir',\n    'project.shopping.header.orders': 'Pedidos',\n    'project.app.Home.welcome': 'Busque en nuestro catálogo de productos.',\n\n    'project.catalog.CategorySelector.allDepartments': 'Todos los departamentos',\n    'project.catalog.FindProductsResult.noProductsFound': 'No se encontraron productos',\n\n    'project.common.ErrorDialog.title': 'Error',\n\n    'project.global.buttons.buy': 'Comprar',\n    'project.global.buttons.cancel': 'Cancelar',\n    'project.global.buttons.close': 'Cerrar',\n    'project.global.buttons.next': 'Siguiente',\n    'project.global.buttons.ok': 'OK',\n    'project.global.buttons.back': 'Anterior',\n    'project.global.buttons.save': 'Guardar',\n    'project.global.buttons.search': 'Buscar',\n    'project.global.exceptions.NetworkError': 'Fallo de comunicación',\n    'project.global.fields.date': 'Fecha',\n    'project.global.fields.department': 'Departamento',\n    'project.global.fields.email': 'Correo electrónico',\n    'project.global.fields.firstName': 'Nombre',\n    'project.global.fields.purchaseOrder': 'Orden de compra',\n    'project.global.fields.lastName': 'Apellidos',\n    'project.global.fields.name': 'Nombre',\n    'project.global.fields.password': 'Contraseña',\n    'project.global.fields.postalAddress': 'Dirección postal',\n    'project.global.fields.postalCode': 'Código postal',\n    'project.global.fields.price': 'Precio',\n    'project.global.fields.quantity': 'Cantidad',\n    'project.global.fields.totalPrice': 'Precio total',\n    'project.global.fields.userName': 'Usuario',\n    'project.global.validator.email': 'Introduzca una dirección de correo electrónico correcta',\n    'project.global.validator.incorrectQuantity': 'Cantidad incorrecta',\n    'project.global.validator.passwordsDoNotMatch': 'Las contraseñas no coinciden',\n    'project.global.validator.required': 'Campo obligatorio',\n\n    'project.shopping.AddToCart.add': 'Añadir al carrito',\n    'project.shopping.BuyForm.title': 'Comprar',\n    'project.shopping.FindOrdersResult.noOrders': 'No se encontraron pedidos',\n    'project.shopping.PurchaseCompleted.purchaseOrderGenerated': 'Orden de compra generada',\n    'project.shopping.ShoppingCart.empty': 'El carrito está vacío',\n\n    'project.users.ChangePassword.fields.confirmNewPassword': 'Confirmar contraseña nueva',\n    'project.users.ChangePassword.fields.newPassword': 'Contraseña nueva',\n    'project.users.ChangePassword.fields.oldPassword': 'Contraseña antigua',\n    'project.users.ChangePassword.title': 'Cambiar contraseña',\n    'project.users.Login.title': 'Autenticarse',\n    'project.users.SignUp.fields.confirmPassword': 'Confirmar contraseña',\n    'project.users.SignUp.title': 'Registrarse',\n    'project.users.UpdateProfile.title': 'Actualizar perfil'\n\n}\n","export default {\n\n    'project.app.Footer.text': 'PA Shop - Area de Enxeñaría Telemática - Universidade da Coruña',\n    'project.app.Header.home': 'Inicio',\n    'project.app.Header.logout': 'Saír',\n    'project.shopping.header.orders': 'Pedidos',\n    'project.app.Home.welcome': 'Busque no noso catálogo de productos.',\n\n    'project.catalog.CategorySelector.allDepartments': 'Tódolos departamentos',\n    'project.catalog.FindProductsResult.noProductsFound': 'No se atoparon productos',\n\n    'project.common.ErrorDialog.title': 'Erro',\n\n    'project.global.buttons.buy': 'Mercar',\n    'project.global.buttons.cancel': 'Cancelar',\n    'project.global.buttons.close': 'Cerrar',\n    'project.global.buttons.next': 'Seguinte',\n    'project.global.buttons.ok': 'OK',\n    'project.global.buttons.back': 'Anterior',\n    'project.global.buttons.save': 'Gardar',\n    'project.global.buttons.search': 'Buscar',\n    'project.global.exceptions.NetworkError': 'Erro de comunicación',\n    'project.global.fields.date': 'Data',\n    'project.global.fields.department': 'Departamento',\n    'project.global.fields.email': 'Correo electrónico',\n    'project.global.fields.firstName': 'Nome',\n    'project.global.fields.purchaseOrder': 'Orden de compra',\n    'project.global.fields.lastName': 'Apelidos',\n    'project.global.fields.name': 'Nome',\n    'project.global.fields.password': 'Contrasinal',\n    'project.global.fields.postalAddress': 'Dirección postal',\n    'project.global.fields.postalCode': 'Código postal',\n    'project.global.fields.price': 'Prezo',\n    'project.global.fields.quantity': 'Cantidade',\n    'project.global.fields.totalPrice': 'Prezo total',\n    'project.global.fields.userName': 'Usuario',\n    'project.global.validator.email': 'Introduzca unha dirección de correo electrónico correcta',\n    'project.global.validator.incorrectQuantity': 'Cantidade incorrecta',\n    'project.global.validator.passwordsDoNotMatch': 'As contrasinais non coinciden',\n    'project.global.validator.required': 'Campo obrigatorio',\n\n    'project.shopping.AddToCart.add': 'Engadir ao carrito',\n    'project.shopping.BuyForm.title': 'Mercar',\n    'project.shopping.FindOrdersResult.noOrders': 'Non se atoparon pedidos',\n    'project.shopping.PurchaseCompleted.purchaseOrderGenerated': 'Orden de compra xerada',\n    'project.shopping.ShoppingCart.empty': 'O carro está baleiro',\n\n    'project.users.ChangePassword.fields.confirmNewPassword': 'Confirmar contrasinal nova',\n    'project.users.ChangePassword.fields.newPassword': 'Contrasinal nova',\n    'project.users.ChangePassword.fields.oldPassword': 'Contrasinal antiga',\n    'project.users.ChangePassword.title': 'Cambiar contrasinal',\n    'project.users.Login.title': 'Autenticarse',\n    'project.users.SignUp.fields.confirmPassword': 'Confirmar contrasinal',\n    'project.users.SignUp.title': 'Rexistrarse',\n    'project.users.UpdateProfile.title': 'Actualizar perfil'\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {IntlProvider} from 'react-intl';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap';\nimport '@fortawesome/fontawesome-free-webfonts/css/fontawesome.css';\nimport '@fortawesome/fontawesome-free-webfonts/css/fa-solid.css';\n\nimport * as serviceWorker from './serviceWorker';\nimport './polyfills';\nimport configureStore from './store';\nimport {App} from './modules/app';\nimport backend from './backend';\nimport {NetworkError} from './backend';\nimport app from './modules/app';\nimport {initReactIntl} from './i18n';\nimport './styles.css';\n\n/* Configure store. */\nconst store = configureStore();\n\n/* Configure backend proxy. */\nbackend.init(error => store.dispatch(app.actions.error(new NetworkError())));\n\n/* Configure i18n. */\nconst {locale, messages} = initReactIntl();\n\n/* Render application. */\nReactDOM.render(\n    <Provider store={store}>\n        <IntlProvider locale={locale} messages={messages}>\n            <App/>\n        </IntlProvider>\n    </Provider>, \n    document.getElementById('root'));\n\nserviceWorker.register();\n","import messages from './messages';\n\nexport const initReactIntl = () => {\n\n    let locale = (navigator.languages && navigator.languages[0]) ||\n        navigator.language || navigator.userLanguage || 'en';\n    const localeWithoutRegionCode = locale.toLowerCase().split(/[_-]+/)[0];\n    const localeMessages = messages[locale] || \n        messages[localeWithoutRegionCode] || messages['en'];\n\n    locale = localeMessages === messages['en'] ? 'en' : locale;\n\n    return {locale, messages: localeMessages};\n\n}\n\n"],"sourceRoot":""}